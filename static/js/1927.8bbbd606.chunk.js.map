{"version":3,"file":"static/js/1927.8bbbd606.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2;\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(\"particleDestroyed\", {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            for (const particle of particles) {\n                this._pool.push(particle);\n            }\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitOptions = this._container.actualOptions.particles.number.limit, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            if (limitOptions.mode === \"delete\") {\n                const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                if (countToRemove > minCount) {\n                    this.removeQuantity(countToRemove);\n                }\n            }\n            else if (limitOptions.mode === \"wait\") {\n                if (currentCount >= limit) {\n                    return;\n                }\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(\"particleRemoved\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver((entries) => this._intersectionManager(entries));\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                const lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this), minIndex = 0;\n        if (idx >= minIndex) {\n            const deleteCount = 1;\n            mainArr.splice(idx, deleteCount);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = requestAnimationFrame((timestamp) => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(this.actualOptions.delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > minFpsLimit ? this.actualOptions.fpsLimit : defaultFpsLimit;\n        this._smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n"],"names":["setTransformValue","factor","newFactor","key","newValue","undefined","setStyle","canvas","style","important","elementStyle","value","setProperty","Canvas","constructor","container","this","_applyPostDrawUpdaters","particle","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","rangeColorToHsl","particleStrokeColor","_initCover","async","cover","actualOptions","backgroundMask","color","coverRgb","rangeColorToRgb","coverColor","a","opacity","_coverColorStyle","getStyleFromRgb","Promise","resolve","reject","image","img","document","createElement","addEventListener","_coverImage","evt","error","src","_initStyle","element","options","_fullScreen","_originalStyle","deepExtend","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","enable","length","fillColor","_trailFill","_paintBase","baseColor","draw","paintBase","size","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","callback","_mutationObserver","position","zIndex","fullScreen","toString","top","left","width","height","_context","_generated","clear","paint","destroy","stop","remove","cb","drawAsync","drawParticle","delta","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","getStyleFromHsl","context","composite","sizeRate","shadow","drawParticlePlugin","drawPlugin","init","obs","safeMutationObserver","records","record","type","attributeName","e","getLogger","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","dataset","generatedAttribute","ariaHidden","offsetHeight","offsetWidth","getContext","retina","pxRatio","pixelRatio","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","add","addOptions","passive","isBoolean","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","executeOnSingleOrMultiple","mode","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","matches","dark","light","theme","themes","find","name","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","delay","millisecondsToSeconds","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMoveEvent","mouseMove","touchStartEvent","touchStart","touchMoveEvent","touchMove","touchEndEvent","touchEndClick","mouseUpEvent","mouseUp","mouseDownEvent","mouseDown","touchEnd","mouseLeave","touchCancelEvent","touchCancel","_manageListeners","detectType","detectsOn","mouseLeaveEvent","window","mouseOutEvent","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChangeEvent","visibilityChange","mediaMatch","safeMatchMedia","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","resizeEvent","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","inside","handled","mousePosition","clickPositionValid","status","_mouseTouchMove","pos","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","y","clientY","source","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lengthOffset","lastTouch","touches","defaultCoordinate","_touchEnd","Array","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","addListeners","removeListeners","InteractionManager","engine","_engine","_interactors","_externalInteractors","_particleInteractors","externalInteract","interactor","isEnabled","interact","getInteractors","particlesInteract","reset","half","fixOutMode","data","isInArray","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_calcPosition","tryCount","pluginPos","particlePosition","Vector3d","create","canvasSize","exactPosition","calcExactPositionOrRandomFromSize","outModes","fixHorizontal","fixVertical","right","bottom","_checkOverlap","increment","_calculateVelocity","res","getParticleBaseVelocity","direction","copy","moveOptions","rad","degToRad","getRangeValue","angle","radOffset","offset","range","straight","randomInRange","setRangeValue","random","speed","getRandom","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","errorPrefix","getDistance","_getRollColor","roll","backColor","alter","backFactor","horizontal","vertical","double","backSum","Math","PI","floor","alterHsl","_initPosition","zIndexValue","clamp","zLayers","initialPosition","moveCenter","getPosition","center","getParticleDirectionAngle","outType","Vector","origin","override","unbreakable","inRange","slow","pathGenerator","shapeDrawer","shapeDrawers","get","shape","particleDestroy","particleDestroyed","dispatchEvent","getHslFromAnimation","getMass","z","strokeColor","id","overrideOptions","group","effectClose","effectFill","shapeClose","shapeFill","pathRotation","lastPathTime","rotation","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","loadParticlesOptions","effectType","effect","shapeType","reduceDuplicates","itemFromSingleOrMultiple","effectOptions","shapeOptions","overrideEffectType","load","overrideShapeType","effectData","close","loadEffectData","shapeData","loadShapeData","Interactivity","pathOptions","path","pathDelay","generator","getPathGenerator","addPath","initParticle","initParticleNumericAnimationValue","initialVelocity","velocity","moveDecay","decay","setLastZIndex","sides","effectDrawer","effectDrawers","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","shadowColor","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","i","fixedIndex","_subs","Rectangle","round","_divided","_points","insert","point","contains","some","sub","query","check","intersects","p","queryCircle","Circle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","numberOptions","number","density","_limit","limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","min","particlesCount","count","filter","t","abs","removeQuantity","densityOptions","_container","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","warning","_removeParticle","index","zIdx","indexOf","splice","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","manualParticles","addParticle","limitOptions","currentCount","countToRemove","update","condition","particlesInitialization","groups","groupOptions","j","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","Set","resizeFactor","particleUpdate","checkDelete","has","zArray","sort","b","Retina","reduceFactor","detectRetina","isSsr","devicePixelRatio","ratio","maxSpeed","gravity","sizeAnimationSpeed","animation","moveDistance","distance","props","moveDrift","drift","moveSpeed","guardCheck","loadContainerOptions","sourceOptionsArr","Options","loadOptions","Container","sourceOptions","_intersectionManager","pauseOnOutsideViewport","entry","isIntersecting","_nextFrame","timestamp","_smooth","_lastFrameTime","fpsLimit","smooth","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","safeIntersectionObserver","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","minCoordinate","max","radiusX","radiusY","touchCancelHandler","keys","clearPlugins","mainArr","dom","idx","findIndex","deleteCount","force","refreshTime","frame","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","effects","getSupportedEffects","drawer","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","duration","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","autoPlay","start","HTMLElement","_delayTimeout","responsive","newMaxWidth","setResponsive","setTheme","_responsiveMaxWidth"],"sourceRoot":""}