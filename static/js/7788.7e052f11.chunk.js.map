{"version":3,"file":"static/js/7788.7e052f11.chunk.js","mappings":"iKAGO,MAAMA,UAAgBC,EAAAA,GACzBC,WAAAA,CAAYC,GACRC,MAAMD,GACNE,KAAKC,gBAAmBC,IACpB,MAAMJ,EAAYE,KAAKF,UAAWK,EAAUL,EAAUM,cACtD,IAAKD,EAAQE,cAAcC,MAAMC,QAN1B,WAMoCL,EACvC,OAEJ,MAAMM,GAAWC,EAAAA,EAAAA,IAAcN,EAAQE,cAAcC,MAAMC,OAAOG,UAClEZ,EAAUa,UAAUC,eAAeJ,EAAS,CAEpD,CACAK,KAAAA,GACA,CACAC,IAAAA,GACA,CACAC,QAAAA,GACA,CACAC,SAAAA,GACI,OAAO,CACX,CACAC,eAAAA,CAAgBd,KAAYe,GACnBf,EAAQI,SACTJ,EAAQI,OAAS,IAAIY,EAAAA,GAEzB,IAAK,MAAMC,KAAUF,EACjBf,EAAQI,OAAOc,KAAKD,GAAQb,OAEpC,CACAe,KAAAA,GACA,E","sources":["../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js"],"sourcesContent":["import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n"],"names":["Remover","ExternalInteractorBase","constructor","container","super","this","handleClickMode","mode","options","actualOptions","interactivity","modes","remove","removeNb","getRangeValue","quantity","particles","removeQuantity","clear","init","interact","isEnabled","loadModeOptions","sources","Remove","source","load","reset"],"sourceRoot":""}